"use strict";(self.webpackChunkprimeng=self.webpackChunkprimeng||[]).push([[4181],{4181:(D,d,n)=>{n.r(d),n.d(d,{KeyFilterDemoModule:()=>A});var m=n(96814),c=n(60095),a=n(4873),y=n(38616),f=n(93189),p=n(97673),e=n(14769);let x=(()=>{var t;class l{}return(t=l).\u0275fac=function(o){return new(o||t)},t.\u0275mod=e.oAB({type:t}),t.\u0275inj=e.cJS({imports:[m.ez,p.a,c.UX,f.V,y.kK,a.j,f.V]}),l})();var b=n(42129),s=n(38454),u=n(24009);let v=(()=>{var t;class l{constructor(){this.code={basic:'\n<form [formGroup]="formGroup">\n    <label for="integer" class="font-bold block mb-2"> Integer </label>\n    <input pInputText id="integer" pKeyFilter="int" class="w-full" formControlName="value"/>\n</form>',html:'\n<div class="card flex justify-content-center">\n    <form [formGroup]="formGroup">\n        <label for="integer" class="font-bold block mb-2"> Integer </label>\n        <input pInputText id="integer" pKeyFilter="int" class="w-full" formControlName="value"/>\n    </form>\n</div>',typescript:"\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'key-filter-reactive-forms-demo',\n    templateUrl: './key-filter-reactive-forms-demo.html'\n})\nexport class KeyFilterReactiveFormsDemo implements OnInit {\n    formGroup!: FormGroup;\n\n    ngOnInit() {\n        this.formGroup = new FormGroup({\n            value: new FormControl(1234)\n        });\n    }\n}"}}ngOnInit(){this.formGroup=new c.cw({value:new c.NI(1234)})}}return(t=l).\u0275fac=function(o){return new(o||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["reactive-forms-doc"]],inputs:{id:"id",title:"title"},decls:13,vars:4,consts:[[1,"py-4"],[3,"title","id"],[1,"card","flex","justify-content-center"],[3,"formGroup"],["for","integer",1,"font-bold","block","mb-2"],["pInputText","","id","integer","pKeyFilter","int","formControlName","value",1,"w-full"],["selector","key-filter-reactive-forms-demo",3,"code"]],template:function(o,r){1&o&&(e.TgZ(0,"section",0)(1,"app-docsectiontext",1)(2,"p"),e._uU(3,"KeyFilter can also be used with reactive forms. In this case, the "),e.TgZ(4,"i"),e._uU(5,"formControlName"),e.qZA(),e._uU(6," property is used to bind the component to a form control."),e.qZA()(),e.TgZ(7,"div",2)(8,"form",3)(9,"label",4),e._uU(10," Integer "),e.qZA(),e._UZ(11,"input",5),e.qZA()(),e._UZ(12,"app-code",6),e.qZA()),2&o&&(e.xp6(1),e.Q6J("title",r.title)("id",r.id),e.xp6(7),e.Q6J("formGroup",r.formGroup),e.xp6(4),e.Q6J("code",r.code))},dependencies:[p.h,c._Y,c.Fj,c.JJ,c.JL,c.sg,c.u,s.c,u.Fr,a.o],encapsulation:2}),l})(),F=(()=>{var t;class l{}return(t=l).\u0275fac=function(o){return new(o||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["accessibility-doc"]],inputs:{id:"id",title:"title"},decls:7,vars:2,consts:[[3,"title","id"],["href","/inputtext"]],template:function(o,r){1&o&&(e.TgZ(0,"div")(1,"app-docsectiontext",0)(2,"p"),e._uU(3,"Refer to "),e.TgZ(4,"a",1),e._uU(5,"InputText"),e.qZA(),e._uU(6," for accessibility as KeyFilter is a built-in add-on of the InputText."),e.qZA()()()),2&o&&(e.xp6(1),e.Q6J("title",r.title)("id",r.id))},dependencies:[s.c],encapsulation:2}),l})(),g=(()=>{var t;class l{constructor(){this.code={typescript:"import { KeyFilterModule } from 'primeng/keyfilter';"}}}return(t=l).\u0275fac=function(o){return new(o||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["import-doc"]],inputs:{id:"id",title:"title"},decls:3,vars:4,consts:[[1,"py-4"],[3,"title","id"],[3,"code","hideToggleCode"]],template:function(o,r){1&o&&(e.TgZ(0,"section",0),e._UZ(1,"app-docsectiontext",1)(2,"app-code",2),e.qZA()),2&o&&(e.xp6(1),e.Q6J("title",r.title)("id",r.id),e.xp6(1),e.Q6J("code",r.code)("hideToggleCode",!0))},dependencies:[p.h,s.c],encapsulation:2}),l})(),h=(()=>{var t;class l{constructor(){this.code={basic:'\n<input pInputText pKeyFilter="int" />\n<input pInputText pKeyFilter="num" />\n<input pInputText pKeyFilter="money" />\n<input pInputText pKeyFilter="hex" />\n<input pInputText pKeyFilter="alpha" />\n<input pInputText pKeyFilter="alphanum" />',html:'\n<div class="card">\n    <div class="flex flex-wrap gap-3 mb-4">\n        <div class="flex-auto">\n            <label for="integer" class="font-bold block mb-2"> Integer </label>\n            <input pInputText id="integer" pKeyFilter="int" class="w-full" />\n        </div>\n        <div class="flex-auto">\n            <label for="number" class="font-bold block mb-2"> Number </label>\n            <input pInputText id="number" pKeyFilter="num" class="w-full" />\n        </div>\n        <div class="flex-auto">\n            <label for="money" class="font-bold block mb-2"> Money </label>\n            <input pInputText id="money" pKeyFilter="money" class="w-full" />\n        </div>\n    </div>\n    <div class="flex flex-wrap gap-3">\n        <div class="flex-auto">\n            <label for="hex" class="font-bold block mb-2"> Hex </label>\n            <input pInputText id="hex" pKeyFilter="hex" class="w-full" />\n        </div>\n        <div class="flex-auto">\n            <label for="alphabetic" class="font-bold block mb-2"> Alphabetic </label>\n            <input pInputText id="alphabetic" pKeyFilter="alpha" class="w-full" />\n        </div>\n        <div class="flex-auto">\n            <label for="alphanumeric" class="font-bold block mb-2"> Alphanumeric </label>\n            <input pInputText id="alphanumeric" pKeyFilter="alphanum" class="w-full" />\n        </div>\n    </div>\n</div>',typescript:"\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'key-filter-presets-demo',\n    templateUrl: './key-filter-presets-demo.html'\n})\nexport class KeyFilterPresetsDemo {}"}}}return(t=l).\u0275fac=function(o){return new(o||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["presets-doc"]],inputs:{id:"id",title:"title"},decls:35,vars:3,consts:[[1,"py-4"],[3,"title","id"],[1,"card"],[1,"flex","flex-wrap","gap-3","mb-4"],[1,"flex-auto"],["for","integer",1,"font-bold","block","mb-2"],["pInputText","","id","integer","pKeyFilter","int",1,"w-full"],["for","number",1,"font-bold","block","mb-2"],["pInputText","","id","number","pKeyFilter","num",1,"w-full"],["for","money",1,"font-bold","block","mb-2"],["pInputText","","id","money","pKeyFilter","money",1,"w-full"],[1,"flex","flex-wrap","gap-3"],["for","hex",1,"font-bold","block","mb-2"],["pInputText","","id","hex","pKeyFilter","hex",1,"w-full"],["for","alphabetic",1,"font-bold","block","mb-2"],["pInputText","","id","alphabetic","pKeyFilter","alpha",1,"w-full"],["for","alphanumeric",1,"font-bold","block","mb-2"],["pInputText","","id","alphanumeric","pKeyFilter","alphanum",1,"w-full"],["selector","key-filter-presets-demo",3,"code"]],template:function(o,r){1&o&&(e.TgZ(0,"section",0)(1,"app-docsectiontext",1)(2,"p"),e._uU(3,"KeyFilter provides various presets configured with the "),e.TgZ(4,"i"),e._uU(5,"pKeyFilter"),e.qZA(),e._uU(6," property."),e.qZA()(),e.TgZ(7,"div",2)(8,"div",3)(9,"div",4)(10,"label",5),e._uU(11," Integer "),e.qZA(),e._UZ(12,"input",6),e.qZA(),e.TgZ(13,"div",4)(14,"label",7),e._uU(15," Number "),e.qZA(),e._UZ(16,"input",8),e.qZA(),e.TgZ(17,"div",4)(18,"label",9),e._uU(19," Money "),e.qZA(),e._UZ(20,"input",10),e.qZA()(),e.TgZ(21,"div",11)(22,"div",4)(23,"label",12),e._uU(24," Hex "),e.qZA(),e._UZ(25,"input",13),e.qZA(),e.TgZ(26,"div",4)(27,"label",14),e._uU(28," Alphabetic "),e.qZA(),e._UZ(29,"input",15),e.qZA(),e.TgZ(30,"div",4)(31,"label",16),e._uU(32," Alphanumeric "),e.qZA(),e._UZ(33,"input",17),e.qZA()()(),e._UZ(34,"app-code",18),e.qZA()),2&o&&(e.xp6(1),e.Q6J("title",r.title)("id",r.id),e.xp6(33),e.Q6J("code",r.code))},dependencies:[p.h,s.c,u.Fr,a.o],encapsulation:2}),l})(),Z=(()=>{var t;class l{constructor(){this.blockSpace=/[^\s]/,this.blockChars=/^[^<>*!]+$/,this.code={basic:'\n<input pInputText [pKeyFilter]="blockSpace" />\n<input pInputText [pKeyFilter]="blockChars" />',html:'\n<div class="card flex flex-wrap gap-3">\n    <div class="flex-auto">\n        <label for="blockspace" class="font-bold block mb-2"> Block Space </label>\n        <input pInputText id="blockspace" pKeyFilter="int" class="w-full" />\n    </div>\n    <div class="flex-auto">\n        <label for="block" class="font-bold block mb-2"> Block < > * ! </label>\n        <input pInputText id="block" pKeyFilter="int" class="w-full" />\n    </div>\n</div>',typescript:"\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'key-filter-reg-exp-demo',\n    templateUrl: './key-filter-reg-exp-demo.html'\n})\nexport class KeyFilterRegExpDemo {\n    blockSpace: RegExp = /[^s]/; \n    \n    blockChars: RegExp = /^[^<>*!]+$/;\n}"}}}return(t=l).\u0275fac=function(o){return new(o||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["reg-exp-demo"]],inputs:{id:"id",title:"title"},decls:14,vars:5,consts:[[1,"py-4"],[3,"title","id"],[1,"card","flex","flex-wrap","gap-3"],[1,"flex-auto"],["for","blockspace",1,"font-bold","block","mb-2"],["pInputText","","id","blockspace",1,"w-full",3,"pKeyFilter"],["for","block",1,"font-bold","block","mb-2"],["pInputText","","id","block",1,"w-full",3,"pKeyFilter"],["selector","key-filter-reg-exp-demo",3,"code"]],template:function(o,r){1&o&&(e.TgZ(0,"section",0)(1,"app-docsectiontext",1)(2,"p"),e._uU(3,"In addition to the presets, a regular expression can be configured for customization."),e.qZA()(),e.TgZ(4,"div",2)(5,"div",3)(6,"label",4),e._uU(7," Block Space "),e.qZA(),e._UZ(8,"input",5),e.qZA(),e.TgZ(9,"div",3)(10,"label",6),e._uU(11," Block < > * ! "),e.qZA(),e._UZ(12,"input",7),e.qZA()(),e._UZ(13,"app-code",8),e.qZA()),2&o&&(e.xp6(1),e.Q6J("title",r.title)("id",r.id),e.xp6(7),e.Q6J("pKeyFilter",r.blockSpace),e.xp6(4),e.Q6J("pKeyFilter",r.blockChars),e.xp6(1),e.Q6J("code",r.code))},dependencies:[p.h,s.c,u.Fr,a.o],encapsulation:2}),l})();var K=n(89867);const T=function(){return["KeyFilter"]};let I=(()=>{var t;class l{constructor(){this.docs=[{id:"import",label:"Import",component:g},{id:"presets",label:"Presets",component:h},{id:"regex",label:"Regex",component:Z},{id:"reactive-forms",label:"Reactive Forms",component:v},{id:"accessibility",label:"Accessibility",component:F}]}}return(t=l).\u0275fac=function(o){return new(o||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["ng-component"]],decls:1,vars:3,consts:[["docTitle","Angular KeyFilter Component","header","KeyFilter","description","KeyFilter is a built-in feature of InputText to restrict user input based on a regular expression.",3,"docs","apiDocs"]],template:function(o,r){1&o&&e._UZ(0,"app-doc",0),2&o&&e.Q6J("docs",r.docs)("apiDocs",e.DdM(2,T))},dependencies:[K.x],encapsulation:2}),l})(),k=(()=>{var t;class l{}return(t=l).\u0275fac=function(o){return new(o||t)},t.\u0275mod=e.oAB({type:t}),t.\u0275inj=e.cJS({imports:[b.Bz.forChild([{path:"",component:I}]),b.Bz]}),l})(),A=(()=>{var t;class l{}return(t=l).\u0275fac=function(o){return new(o||t)},t.\u0275mod=e.oAB({type:t}),t.\u0275inj=e.cJS({imports:[m.ez,k,x]}),l})()}}]);