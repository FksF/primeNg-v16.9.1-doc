"use strict";(self.webpackChunkprimeng=self.webpackChunkprimeng||[]).push([[2389],{92389:(M,m,n)=>{n.r(m),n.d(m,{TriStateCheckboxDemoModule:()=>D});var h=n(96814),l=n(60095),f=n(42283),b=n(93189),r=n(97673),d=n(42129),e=n(14769);let g=(()=>{var t;class i{}return(t=i).\u0275fac=function(o){return new(o||t)},t.\u0275mod=e.oAB({type:t}),t.\u0275inj=e.cJS({imports:[h.ez,r.a,b.V,f.GY,l.u5,l.UX,d.Bz,b.V]}),i})();var s=n(38454),p=n(91471);let x=(()=>{var t;class i{constructor(){this.value=null,this.code={basic:'\n<p-triStateCheckbox class="p-tristatecheckbox-label" [(ngModel)]="value" inputId="tricheckbox"></p-triStateCheckbox>',html:'\n<div class="card flex flex-column gap-3 align-items-center">\n    <p-triStateCheckbox [(ngModel)]="value" inputId="tricheckbox"></p-triStateCheckbox>\n    <label class="p-tristatecheckbox-label" for="tricheckbox">{{ value === null ? \'null\' : value }}</label>\n</div>',typescript:"\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'tri-state-checkbox-basic-demo',\n    templateUrl: './tri-state-checkbox-basic-demo.html'\n})\nexport class TriStateCheckboxBasicDemo {\n    value: boolean | null = null;\n}"}}}return(t=i).\u0275fac=function(o){return new(o||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["basic-doc"]],inputs:{id:"id",title:"title"},decls:12,vars:5,consts:[[1,"py-4"],[3,"title","id"],[1,"card","flex","flex-column","gap-3","align-items-center"],["inputId","tricheckbox",3,"ngModel","ngModelChange"],["for","tricheckbox",1,"p-tristatecheckbox-label"],["selector","tri-state-checkbox-basic-demo",3,"code"]],template:function(o,c){1&o&&(e.TgZ(0,"section",0)(1,"app-docsectiontext",1)(2,"p"),e._uU(3,"A model can be bound using the standard "),e.TgZ(4,"i"),e._uU(5,"ngModel"),e.qZA(),e._uU(6," directive."),e.qZA()(),e.TgZ(7,"div",2)(8,"p-triStateCheckbox",3),e.NdJ("ngModelChange",function(u){return c.value=u}),e.qZA(),e.TgZ(9,"label",4),e._uU(10),e.qZA()(),e._UZ(11,"app-code",5),e.qZA()),2&o&&(e.xp6(1),e.Q6J("title",c.title)("id",c.id),e.xp6(7),e.Q6J("ngModel",c.value),e.xp6(2),e.Oqu(null===c.value?"null":c.value),e.xp6(1),e.Q6J("code",c.code))},dependencies:[r.h,s.c,p.Iq,l.JJ,l.On],encapsulation:2}),i})(),Z=(()=>{var t;class i{constructor(){this.code={typescript:"import { TriStateCheckboxModule } from 'primeng/tristatecheckbox';"}}}return(t=i).\u0275fac=function(o){return new(o||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["import-doc"]],inputs:{id:"id",title:"title"},decls:3,vars:4,consts:[[1,"py-4"],[3,"title","id"],[3,"code","hideToggleCode"]],template:function(o,c){1&o&&(e.TgZ(0,"section",0),e._UZ(1,"app-docsectiontext",1)(2,"app-code",2),e.qZA()),2&o&&(e.xp6(1),e.Q6J("title",c.title)("id",c.id),e.xp6(1),e.Q6J("code",c.code)("hideToggleCode",!0))},dependencies:[r.h,s.c],encapsulation:2}),i})(),k=(()=>{var t;class i{constructor(){this.code={basic:'\n<p-triStateCheckbox [(ngModel)]="value" [disabled]="true"></p-triStateCheckbox>',html:'\n<div class="card flex flex-column gap-3 align-items-center">\n    <p-triStateCheckbox [(ngModel)]="value" [disabled]="true"></p-triStateCheckbox>\n    <label>{{value === null ? \'null\' : value}}</label>\n</div>',typescript:"\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'tri-state-checkbox-disabled-demo',\n    templateUrl: './tri-state-checkbox-disabled-demo.html'\n})\nexport class TriStateCheckboxDisabledDemo {\n    value!: string;\n}"}}}return(t=i).\u0275fac=function(o){return new(o||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["disabled-doc"]],inputs:{id:"id",title:"title"},decls:12,vars:6,consts:[[1,"py-4"],[3,"title","id"],[1,"card","flex","flex-column","gap-3","align-items-center"],[3,"ngModel","disabled","ngModelChange"],["selector","tri-state-checkbox-disabled-demo",3,"code"]],template:function(o,c){1&o&&(e.TgZ(0,"section",0)(1,"app-docsectiontext",1)(2,"p"),e._uU(3,"When "),e.TgZ(4,"i"),e._uU(5,"disabled"),e.qZA(),e._uU(6," is present, the element cannot be edited and focused."),e.qZA()(),e.TgZ(7,"div",2)(8,"p-triStateCheckbox",3),e.NdJ("ngModelChange",function(u){return c.value=u}),e.qZA(),e.TgZ(9,"label"),e._uU(10),e.qZA()(),e._UZ(11,"app-code",4),e.qZA()),2&o&&(e.xp6(1),e.Q6J("title",c.title)("id",c.id),e.xp6(7),e.Q6J("ngModel",c.value)("disabled",!0),e.xp6(2),e.Oqu(null===c.value?"null":c.value),e.xp6(1),e.Q6J("code",c.code))},dependencies:[r.h,s.c,p.Iq,l.JJ,l.On],encapsulation:2}),i})();const T=function(){return["/theming"]};let v=(()=>{var t;class i{}return(t=i).\u0275fac=function(o){return new(o||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["style-doc"]],inputs:{id:"id",title:"title"},decls:36,vars:4,consts:[[1,"py-4"],[3,"title","id"],["href","#",3,"routerLink"],[1,"doc-tablewrapper"],[1,"doc-table"]],template:function(o,c){1&o&&(e.TgZ(0,"section",0)(1,"app-docsectiontext",1)(2,"p"),e._uU(3,"Following is the list of structural style classes, for theming classes visit "),e.TgZ(4,"a",2),e._uU(5,"theming"),e.qZA(),e._uU(6," page."),e.qZA()(),e.TgZ(7,"div",3)(8,"table",4)(9,"thead")(10,"tr")(11,"th"),e._uU(12,"Name"),e.qZA(),e.TgZ(13,"th"),e._uU(14,"Element"),e.qZA()()(),e.TgZ(15,"tbody")(16,"tr")(17,"td"),e._uU(18,"p-checkbox"),e.qZA(),e.TgZ(19,"td"),e._uU(20,"Container element"),e.qZA()(),e.TgZ(21,"tr")(22,"td"),e._uU(23,"p-tristatechkbox"),e.qZA(),e.TgZ(24,"td"),e._uU(25,"Container element"),e.qZA()(),e.TgZ(26,"tr")(27,"td"),e._uU(28,"p-checkbox-box"),e.qZA(),e.TgZ(29,"td"),e._uU(30,"Container of icon."),e.qZA()(),e.TgZ(31,"tr")(32,"td"),e._uU(33,"p-checkbox-icon"),e.qZA(),e.TgZ(34,"td"),e._uU(35,"Icon element."),e.qZA()()()()()()),2&o&&(e.xp6(1),e.Q6J("title",c.title)("id",c.id),e.xp6(3),e.Q6J("routerLink",e.DdM(3,T)))},dependencies:[s.c,d.rH],encapsulation:2}),i})(),C=(()=>{var t;class i{constructor(){this.code={basic:'<span id="chkbox1">Remember Me</span>\n<p-triStateCheckbox ariaLabelledBy="chkbox1"></p-triStateCheckbox>\n\n<p-triStateCheckbox ariaLabel="Remember Me"></p-triStateCheckbox>'}}}return(t=i).\u0275fac=function(o){return new(o||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["accessibility-doc"]],inputs:{id:"id",title:"title"},decls:63,vars:6,consts:[[3,"title","id"],["href","/configuration/#locale"],[3,"code","hideToggleCode","hideCodeSandbox","hideStackBlitz"],[1,"doc-tablewrapper"],[1,"doc-table"]],template:function(o,c){1&o&&(e.TgZ(0,"div")(1,"app-docsectiontext",0)(2,"h3"),e._uU(3,"Screen Reader"),e.qZA(),e.TgZ(4,"p"),e._uU(5," TriStateCheckbox component uses an element with "),e.TgZ(6,"i"),e._uU(7,"checkbox"),e.qZA(),e._uU(8," role. Value to describe the component can either be provided with "),e.TgZ(9,"i"),e._uU(10,"ariaLabelledBy"),e.qZA(),e._uU(11," or "),e.TgZ(12,"i"),e._uU(13,"ariaLabel"),e.qZA(),e._uU(14," props. Component adds an element with "),e.TgZ(15,"i"),e._uU(16,"aria-live"),e.qZA(),e._uU(17," attribute that is only visible to screen readers to read the value displayed. Values to read are defined with the "),e.TgZ(18,"i"),e._uU(19,"trueLabel"),e.qZA(),e._uU(20,", "),e.TgZ(21,"i"),e._uU(22,"falseLabel"),e.qZA(),e._uU(23," and "),e.TgZ(24,"i"),e._uU(25,"nullLabel"),e.qZA(),e._uU(26," keys of the "),e.TgZ(27,"i"),e._uU(28,"aria"),e.qZA(),e._uU(29," property from the "),e.TgZ(30,"a",1),e._uU(31,"locale"),e.qZA(),e._uU(32," API. This is an example of a custom accessibility implementation as there is no one to one mapping between the component design and the WCAG specification. "),e.qZA()(),e._UZ(33,"app-code",2),e.TgZ(34,"h3"),e._uU(35,"Keyboard Support"),e.qZA(),e.TgZ(36,"div",3)(37,"table",4)(38,"thead")(39,"tr")(40,"th"),e._uU(41,"Key"),e.qZA(),e.TgZ(42,"th"),e._uU(43,"Function"),e.qZA()()(),e.TgZ(44,"tbody")(45,"tr")(46,"td")(47,"i"),e._uU(48,"tab"),e.qZA()(),e.TgZ(49,"td"),e._uU(50,"Moves focus to the checkbox."),e.qZA()(),e.TgZ(51,"tr")(52,"td")(53,"i"),e._uU(54,"space"),e.qZA()(),e.TgZ(55,"td"),e._uU(56,"Toggles between the values."),e.qZA()(),e.TgZ(57,"tr")(58,"td")(59,"i"),e._uU(60,"enter"),e.qZA()(),e.TgZ(61,"td"),e._uU(62,"Toggles between the values."),e.qZA()()()()()()),2&o&&(e.xp6(1),e.Q6J("title",c.title)("id",c.id),e.xp6(32),e.Q6J("code",c.code)("hideToggleCode",!0)("hideCodeSandbox",!0)("hideStackBlitz",!0))},dependencies:[r.h,s.c],encapsulation:2}),i})(),U=(()=>{var t;class i{constructor(){this.code={basic:'\n<form [formGroup]="formGroup" class="flex flex-column align-items-center gap-3">\n    <p-triStateCheckbox formControlName="checked" inputId="checked"></p-triStateCheckbox>\n    <label class="p-tristatecheckbox-label" for="checked">{{ formGroup.value.checked === null ? \'null\' : formGroup.value.checked }}</label>\n</form>',html:'\n<div class="card flex justify-content-center">\n    <form [formGroup]="formGroup" class="flex flex-column align-items-center gap-3">\n        <p-triStateCheckbox formControlName="checked" inputId="checked"></p-triStateCheckbox>\n        <label class="p-tristatecheckbox-label" for="checked">{{ formGroup.value.checked === null ? \'null\' : formGroup.value.checked }}</label>\n    </form>\n</div>',typescript:"\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'tri-state-checkbox-reactive-forms-demo',\n    templateUrl: './tri-state-checkbox-reactive-forms-demo.html'\n})\nexport class TriStateCheckboxReactiveFormsDemo implements OnInit {\n    formGroup!: FormGroup;\n\n    ngOnInit() {\n        this.formGroup = new FormGroup({\n            checked: new FormControl<boolean | null>(null)\n        });\n    }\n}"}}ngOnInit(){this.formGroup=new l.cw({checked:new l.NI(null)})}}return(t=i).\u0275fac=function(o){return new(o||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["reactive-forms-doc"]],inputs:{id:"id",title:"title"},decls:13,vars:5,consts:[[1,"py-4"],[3,"title","id"],[1,"card","flex","justify-content-center"],[1,"flex","flex-column","align-items-center","gap-3",3,"formGroup"],["formControlName","checked","inputId","checked"],["for","checked",1,"p-tristatecheckbox-label"],["selector","tri-state-checkbox-reactive-forms-demo",3,"code"]],template:function(o,c){1&o&&(e.TgZ(0,"section",0)(1,"app-docsectiontext",1)(2,"p"),e._uU(3,"TriStateCheckbox can also be used with reactive forms. In this case, the "),e.TgZ(4,"i"),e._uU(5,"formControlName"),e.qZA(),e._uU(6," property is used to bind the component to a form control."),e.qZA()(),e.TgZ(7,"div",2)(8,"form",3),e._UZ(9,"p-triStateCheckbox",4),e.TgZ(10,"label",5),e._uU(11),e.qZA()()(),e._UZ(12,"app-code",6),e.qZA()),2&o&&(e.xp6(1),e.Q6J("title",c.title)("id",c.id),e.xp6(7),e.Q6J("formGroup",c.formGroup),e.xp6(3),e.Oqu(null===c.formGroup.value.checked?"null":c.formGroup.value.checked),e.xp6(1),e.Q6J("code",c.code))},dependencies:[r.h,s.c,p.Iq,l._Y,l.JJ,l.JL,l.sg,l.u],encapsulation:2}),i})();var A=n(89867);const y=function(){return["TriStateCheckbox"]};let _=(()=>{var t;class i{constructor(){this.docs=[{id:"import",label:"Import",component:Z},{id:"basic",label:"Basic",component:x},{id:"reactive-forms",label:"Reactive Forms",component:U},{id:"disabled",label:"Disabled",component:k},{id:"style",label:"Style",component:v},{id:"accessibility",label:"Accessibility",component:C}]}}return(t=i).\u0275fac=function(o){return new(o||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["ng-component"]],decls:1,vars:3,consts:[["docTitle","Angular TriStateCheckbox Component","header","TriStateCheckbox","description","TriStateCheckbox is an extension to the Checkbox component with an additional state.",3,"docs","apiDocs"]],template:function(o,c){1&o&&e._UZ(0,"app-doc",0),2&o&&e.Q6J("docs",c.docs)("apiDocs",e.DdM(2,y))},dependencies:[A.x],encapsulation:2}),i})(),S=(()=>{var t;class i{}return(t=i).\u0275fac=function(o){return new(o||t)},t.\u0275mod=e.oAB({type:t}),t.\u0275inj=e.cJS({imports:[d.Bz.forChild([{path:"",component:_}]),d.Bz]}),i})(),D=(()=>{var t;class i{}return(t=i).\u0275fac=function(o){return new(o||t)},t.\u0275mod=e.oAB({type:t}),t.\u0275inj=e.cJS({imports:[h.ez,S,g]}),i})()}}]);